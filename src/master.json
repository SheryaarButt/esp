{
    esp: {
        compile:  'symbols',

        generate: {
            'appweb': 'esp-server/appweb.conf',
            'migration': 'esp-server/migration.c',
            'controller': 'esp-server/controller.c',
            'controllerSingleton': 'esp-server/controller.c',
            'clientModel': 'esp-vue-mvc/model.js',
            'clientController': 'esp-vue-mvc/controller.js',
            'clientList': 'esp-vue-mvc/list.html',
            'clientEdit': 'esp-vue-mvc/edit.html',
            'module': 'esp-mvc/src/app.c'
        },

        preload: [ 'auth.c' ],

        build: {
            dynamic: {
                compile: '${CC} -shared ${DEBUG} -Wall -Wno-unused-result -DPIC -fPIC -I. -I${APPINC} -I${INC} -L${LIBPATH} -Wl,--enable-new-dtags -Wl,-rpath,$ORIGIN/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${SRC}',

                macosx: {
                    compile: '${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${APPINC} -I${INC} ${SRC} -o ${OBJ}',
                    link:    '${CC} -dynamiclib ${DEBUG} -arch ${GCC_ARCH} -L${LIBPATH} -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${OBJ}',
                },
                windows: {
                    env:     'VisualStudio'
                    compile: '"${CC}" -LD ${DEBUG} -D_REENTRANT -D_MT -nologo -GR- -W3 -MDd -I. -I${APPINC} -I"${INC}" -Fo"${MOD}.obj" -Fd"${MOD}.pdb" -Fe"${MOD}${SHOBJ}" "${SRC}" ${CFLAGS} ${LIBS} ${LDFLAGS} ws2_32.lib'
                },
                vxworks: {
                    /*
                        The esp-vxworks.conf file will be generated by 'configure'
                        Alternately, comment out this include, and set WIND_BASE, WIND_HOME, WIND_PLATFORM, WIND_HOST_TYPE, WIND_GNU_PATH
                        and WIND_CCNAME in the environment.
                     */
                    include: '${BIN_DIR}/esp-vxworks.conf',
                    compile: '"${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${WIND_CCNAME}" -c ${DEBUG} -DVXWORKS -DRW_MULTI_THREAD -D_REENTRANT -D_GNU_TOOL -DCPU=${VXCPU} -Wall -fno-builtin -fno-defer-pop -fvolatile "-I." "-I${APPINC}" "-I${WIND_BASE}/target/h" "-I${WIND_BASE}/target/h/wrn/coreip" -I${INC} ${CFLAGS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${SRC}'
                },
                cygwin: {
                    compile: '${CC} -shared ${DEBUG} -Wall -Wno-unused-result -DPIC -fPIC -I. -I${APPINC} -I${INC} -L${LIBPATH} -Wl,-rpath,$ORIGIN/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${SRC}'
                },
                custom: {
                    /*
                        Use this style to run a script to compile. The script would look like:

                        #!/bin/bash
                        for i in "$@" ; do
                            arg="${i%=*}"
                            value="${i##*=}"
                            eval $arg=\"$value\"
                        done
                        ${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${APPINC} -I${INC} ${SRC}
                        ${CC} -dynamiclib ${DEBUG} -L${LIBPATH} -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${OBJ}
                        rm -f ${OBJ}
                        exit 0
                    */
                    compile: 'script DEBUG="${DEBUG}" ARCH="${ARCH}" INC="${INC}" LIB="${LIBPATH}" OBJ="${OBJ}" MOD="${MOD}" SRC="${SRC}" SHOBJ="${SHOBJ}"'
                },
            },
            static: {
                compile: '${CC} -c ${DEBUG} -Wall -Wno-unused-result -I. -I${APPINC} -I${INC} -L${LIBPATH} -Wl,--enable-new-dtags -Wl,-rpath,$ORIGIN/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${OBJ} ${SRC}'
                link: '${AR} -cr ${MOD}${ARLIB} ${OBJ}'

                macosx: {
                    compile: '${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${APPINC} -I${INC} -c ${SRC} -o ${OBJ}'
                    link:    '${AR} -cr ${MOD}${ARLIB} ${OBJ}'
                },
                windows: {
                    env:     'VisualStudio'
                    compile: '"${CC}" -LD ${DEBUG} -D_REENTRANT -D_MT -nologo -GR- -W3 -MDd -I. -I${APPINC} -I"${INC}" -Fd"${MOD}.pdb" -Fe"${MOD}${SHOBJ}" "${SRC}"'
                    link: '${AR} -nologo cr ${MOD}${ARLIB} ${OBJ}'
                },
                vxworks: {
                    /*
                        The esp-vxworks.conf file will be generated by 'configure'
                        Alternately, comment out this include, and set WIND_BASE, WIND_HOME, WIND_PLATFORM, WIND_HOST_TYPE, WIND_GNU_PATH
                        and WIND_CCNAME in the environment.
                     */
                    include: '${BIN_DIR}/esp-vxworks.conf'
                    compile: '"${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${WIND_CCNAME}" -c ${DEBUG} -DVXWORKS -DRW_MULTI_THREAD -D_REENTRANT -D_GNU_TOOL -DCPU=${VXCPU} -Wall -fno-builtin -fno-defer-pop -fvolatile "-I." "-I${APPINC}" "-I${WIND_BASE}/target/h" "-I${WIND_BASE}/target/h/wrn/coreip" -I${INC} -o ${MOD}${SHOBJ} ${SRC}'
                    link: '"${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${WIND_ARNAME}" ${DEBUG} -cr ${MOD}${ARLIB} ${OBJ}'
                },
            }
        }
    }
}
